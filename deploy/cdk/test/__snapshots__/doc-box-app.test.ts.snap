// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`DocBoxStackSnapshot 1`] = `
Object {
  "Outputs": Object {
    "DocumentRestApiEndpoint98FEC9C0": Object {
      "Value": Object {
        "Fn::Join": Array [
          "",
          Array [
            "https://",
            Object {
              "Ref": "DocumentRestApi6062B97A",
            },
            ".execute-api.",
            Object {
              "Ref": "AWS::Region",
            },
            ".",
            Object {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            Object {
              "Ref": "DocumentRestApiDeploymentStageapiB0406D50",
            },
            "/",
          ],
        ],
      },
    },
  },
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "AttachDocumentFunc7255A71A": Object {
      "DependsOn": Array [
        "AttachDocumentFuncServiceRoleDefaultPolicy4AB677CD",
        "AttachDocumentFuncServiceRoleBE7D978C",
      ],
      "Properties": Object {
        "Architectures": Array [
          "arm64",
        ],
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "74757c5dcb2f0d2dcae19e59e846cccff844774061478a14afb78b98a41a54a7.zip",
        },
        "Environment": Object {
          "Variables": Object {
            "APPLICATION_CONTEXT": "DocBox#attachDocument",
            "DOCUMENT_STORAGE_NAME": Object {
              "Ref": "DocumentBucketAE41E5A9",
            },
            "DOCUMENT_TABLE_NAME": Object {
              "Ref": "DocumentTable9FE6D880",
            },
          },
        },
        "FunctionName": "doc-box-attachDocument",
        "Handler": "bootstrap",
        "MemorySize": 1024,
        "Role": Object {
          "Fn::GetAtt": Array [
            "AttachDocumentFuncServiceRoleBE7D978C",
            "Arn",
          ],
        },
        "Runtime": "provided.al2",
      },
      "Type": "AWS::Lambda::Function",
    },
    "AttachDocumentFuncLogRetention8062EB9B": Object {
      "Properties": Object {
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/lambda/",
              Object {
                "Ref": "AttachDocumentFunc7255A71A",
              },
            ],
          ],
        },
        "RetentionInDays": 30,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "AttachDocumentFuncServiceRoleBE7D978C": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "AttachDocumentFuncServiceRoleDefaultPolicy4AB677CD": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "DocumentBucketAE41E5A9",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "DocumentBucketAE41E5A9",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "DocumentTable9FE6D880",
                    "Arn",
                  ],
                },
                Object {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "AttachDocumentFuncServiceRoleDefaultPolicy4AB677CD",
        "Roles": Array [
          Object {
            "Ref": "AttachDocumentFuncServiceRoleBE7D978C",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CreateDocumentFunc54FAC593": Object {
      "DependsOn": Array [
        "CreateDocumentFuncServiceRoleDefaultPolicyEFEEF869",
        "CreateDocumentFuncServiceRole8188B1E2",
      ],
      "Properties": Object {
        "Architectures": Array [
          "arm64",
        ],
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "11e2576b1e7ddafe4c874da027938c19109718748bcb94634b1dfb492dac3c74.zip",
        },
        "Environment": Object {
          "Variables": Object {
            "APPLICATION_CONTEXT": "DocBox#createDocument",
            "DOCUMENT_TABLE_NAME": Object {
              "Ref": "DocumentTable9FE6D880",
            },
          },
        },
        "FunctionName": "doc-box-createDocument",
        "Handler": "bootstrap",
        "MemorySize": 1024,
        "Role": Object {
          "Fn::GetAtt": Array [
            "CreateDocumentFuncServiceRole8188B1E2",
            "Arn",
          ],
        },
        "Runtime": "provided.al2",
      },
      "Type": "AWS::Lambda::Function",
    },
    "CreateDocumentFuncLogRetention4967E25E": Object {
      "Properties": Object {
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/lambda/",
              Object {
                "Ref": "CreateDocumentFunc54FAC593",
              },
            ],
          ],
        },
        "RetentionInDays": 30,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "CreateDocumentFuncServiceRole8188B1E2": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CreateDocumentFuncServiceRoleDefaultPolicyEFEEF869": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "DocumentTable9FE6D880",
                    "Arn",
                  ],
                },
                Object {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CreateDocumentFuncServiceRoleDefaultPolicyEFEEF869",
        "Roles": Array [
          Object {
            "Ref": "CreateDocumentFuncServiceRole8188B1E2",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "DevSecret61FBB390": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "GenerateSecretString": Object {
          "ExcludePunctuation": true,
          "GenerateStringKey": "api_key",
          "PasswordLength": 64,
          "SecretStringTemplate": "{\\"user\\":\\"test123456\\"}",
        },
        "KmsKeyId": Object {
          "Fn::GetAtt": Array [
            "DevSecretKeyADA6D507",
            "Arn",
          ],
        },
      },
      "Type": "AWS::SecretsManager::Secret",
      "UpdateReplacePolicy": "Retain",
    },
    "DevSecretKeyADA6D507": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "KeyPolicy": Object {
          "Statement": Array [
            Object {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "kms:Decrypt",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Condition": Object {
                "StringEquals": Object {
                  "kms:ViaService": Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        "secretsmanager.",
                        Object {
                          "Ref": "AWS::Region",
                        },
                        ".amazonaws.com",
                      ],
                    ],
                  },
                },
              },
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "kms:CreateGrant",
                "kms:DescribeKey",
              ],
              "Condition": Object {
                "StringEquals": Object {
                  "kms:ViaService": Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        "secretsmanager.",
                        Object {
                          "Ref": "AWS::Region",
                        },
                        ".amazonaws.com",
                      ],
                    ],
                  },
                },
              },
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Retain",
    },
    "DocBoxAccessLogGroupD6642F36": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "RetentionInDays": 90,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "DocumentBucketAE41E5A9": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "BucketEncryption": Object {
          "ServerSideEncryptionConfiguration": Array [
            Object {
              "ServerSideEncryptionByDefault": Object {
                "SSEAlgorithm": "aws:kms",
              },
            },
          ],
        },
        "BucketName": "torenken-doc-box-storage",
        "PublicAccessBlockConfiguration": Object {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "DocumentCognitoUserPoolsAuthorizer720A0112": Object {
      "Properties": Object {
        "IdentitySource": "method.request.header.Authorization",
        "Name": "DocBoxStackDocumentCognitoUserPoolsAuthorizer86B00695",
        "ProviderARNs": Array [
          Object {
            "Fn::GetAtt": Array [
              "DocumentUserPoolD7239797",
              "Arn",
            ],
          },
        ],
        "RestApiId": Object {
          "Ref": "DocumentRestApi6062B97A",
        },
        "Type": "COGNITO_USER_POOLS",
      },
      "Type": "AWS::ApiGateway::Authorizer",
    },
    "DocumentDevUsagePlan5160D2D8": Object {
      "Properties": Object {
        "ApiStages": Array [
          Object {
            "ApiId": Object {
              "Ref": "DocumentRestApi6062B97A",
            },
            "Stage": Object {
              "Ref": "DocumentRestApiDeploymentStageapiB0406D50",
            },
            "Throttle": Object {},
          },
        ],
        "Throttle": Object {
          "BurstLimit": 10,
          "RateLimit": 5,
        },
      },
      "Type": "AWS::ApiGateway::UsagePlan",
    },
    "DocumentDevUsagePlanUsagePlanKeyResourceDocBoxStackDocumentRestApiDevApiKey097B2421ADE0E345": Object {
      "Properties": Object {
        "KeyId": Object {
          "Ref": "DocumentRestApiDevApiKey9DA53DBC",
        },
        "KeyType": "API_KEY",
        "UsagePlanId": Object {
          "Ref": "DocumentDevUsagePlan5160D2D8",
        },
      },
      "Type": "AWS::ApiGateway::UsagePlanKey",
    },
    "DocumentRestApi6062B97A": Object {
      "Properties": Object {
        "BinaryMediaTypes": Array [
          "application/pdf",
        ],
        "EndpointConfiguration": Object {
          "Types": Array [
            "REGIONAL",
          ],
        },
        "Name": "DocumentRestApi",
      },
      "Type": "AWS::ApiGateway::RestApi",
    },
    "DocumentRestApiAccount7BEBFC95": Object {
      "DependsOn": Array [
        "DocumentRestApi6062B97A",
      ],
      "Properties": Object {
        "CloudWatchRoleArn": Object {
          "Fn::GetAtt": Array [
            "DocumentRestApiCloudWatchRoleD3B496D8",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ApiGateway::Account",
    },
    "DocumentRestApiCloudWatchRoleD3B496D8": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "DocumentRestApiDeployment5C15C8B864e3941456de33b6202e32d292580844": Object {
      "DependsOn": Array [
        "DocumentRestApidocumentManagementdocumentdocIdattachmentPOST615DB99D",
        "DocumentRestApidocumentManagementdocumentdocIdattachmentFDAEFEFD",
        "DocumentRestApidocumentManagementdocumentdocIdDD428029",
        "DocumentRestApidocumentManagementdocumentPOSTAD0AE468",
        "DocumentRestApidocumentManagementdocument4F103C70",
        "DocumentRestApidocumentManagement575A3BF1",
      ],
      "Properties": Object {
        "Description": "Automatically created by the RestApi construct",
        "RestApiId": Object {
          "Ref": "DocumentRestApi6062B97A",
        },
      },
      "Type": "AWS::ApiGateway::Deployment",
    },
    "DocumentRestApiDeploymentStageapiB0406D50": Object {
      "DependsOn": Array [
        "DocumentRestApiAccount7BEBFC95",
      ],
      "Properties": Object {
        "AccessLogSetting": Object {
          "DestinationArn": Object {
            "Fn::GetAtt": Array [
              "DocBoxAccessLogGroupD6642F36",
              "Arn",
            ],
          },
          "Format": "{\\"requestId\\":\\"$context.requestId\\",\\"ip\\":\\"$context.identity.sourceIp\\",\\"user\\":\\"$context.identity.user\\",\\"caller\\":\\"$context.identity.caller\\",\\"requestTime\\":\\"$context.requestTime\\",\\"httpMethod\\":\\"$context.httpMethod\\",\\"resourcePath\\":\\"$context.resourcePath\\",\\"status\\":\\"$context.status\\",\\"protocol\\":\\"$context.protocol\\",\\"responseLength\\":\\"$context.responseLength\\"}",
        },
        "DeploymentId": Object {
          "Ref": "DocumentRestApiDeployment5C15C8B864e3941456de33b6202e32d292580844",
        },
        "RestApiId": Object {
          "Ref": "DocumentRestApi6062B97A",
        },
        "StageName": "api",
      },
      "Type": "AWS::ApiGateway::Stage",
    },
    "DocumentRestApiDevApiKey9DA53DBC": Object {
      "Properties": Object {
        "Enabled": true,
        "StageKeys": Array [
          Object {
            "RestApiId": Object {
              "Ref": "DocumentRestApi6062B97A",
            },
            "StageName": Object {
              "Ref": "DocumentRestApiDeploymentStageapiB0406D50",
            },
          },
        ],
        "Value": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{{resolve:secretsmanager:",
              Object {
                "Ref": "DevSecret61FBB390",
              },
              ":SecretString:api_key::}}",
            ],
          ],
        },
      },
      "Type": "AWS::ApiGateway::ApiKey",
    },
    "DocumentRestApidocumentManagement575A3BF1": Object {
      "Properties": Object {
        "ParentId": Object {
          "Fn::GetAtt": Array [
            "DocumentRestApi6062B97A",
            "RootResourceId",
          ],
        },
        "PathPart": "documentManagement",
        "RestApiId": Object {
          "Ref": "DocumentRestApi6062B97A",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "DocumentRestApidocumentManagementdocument4F103C70": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "DocumentRestApidocumentManagement575A3BF1",
        },
        "PathPart": "document",
        "RestApiId": Object {
          "Ref": "DocumentRestApi6062B97A",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "DocumentRestApidocumentManagementdocumentPOSTAD0AE468": Object {
      "Properties": Object {
        "ApiKeyRequired": true,
        "AuthorizationScopes": Array [
          "subscriber/docbox",
        ],
        "AuthorizationType": "COGNITO_USER_POOLS",
        "AuthorizerId": Object {
          "Ref": "DocumentCognitoUserPoolsAuthorizer720A0112",
        },
        "HttpMethod": "POST",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "CreateDocumentFunc54FAC593",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Ref": "DocumentRestApidocumentManagementdocument4F103C70",
        },
        "RestApiId": Object {
          "Ref": "DocumentRestApi6062B97A",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DocumentRestApidocumentManagementdocumentPOSTApiPermissionDocBoxStackDocumentRestApi05CE81F3POSTdocumentManagementdocumentFFA7610A": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "CreateDocumentFunc54FAC593",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DocumentRestApi6062B97A",
              },
              "/",
              Object {
                "Ref": "DocumentRestApiDeploymentStageapiB0406D50",
              },
              "/POST/documentManagement/document",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DocumentRestApidocumentManagementdocumentPOSTApiPermissionTestDocBoxStackDocumentRestApi05CE81F3POSTdocumentManagementdocument409186E1": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "CreateDocumentFunc54FAC593",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DocumentRestApi6062B97A",
              },
              "/test-invoke-stage/POST/documentManagement/document",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DocumentRestApidocumentManagementdocumentdocIdDD428029": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "DocumentRestApidocumentManagementdocument4F103C70",
        },
        "PathPart": "{docId}",
        "RestApiId": Object {
          "Ref": "DocumentRestApi6062B97A",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "DocumentRestApidocumentManagementdocumentdocIdattachmentFDAEFEFD": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "DocumentRestApidocumentManagementdocumentdocIdDD428029",
        },
        "PathPart": "attachment",
        "RestApiId": Object {
          "Ref": "DocumentRestApi6062B97A",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "DocumentRestApidocumentManagementdocumentdocIdattachmentPOST615DB99D": Object {
      "Properties": Object {
        "ApiKeyRequired": true,
        "AuthorizationScopes": Array [
          "subscriber/attachbox",
        ],
        "AuthorizationType": "COGNITO_USER_POOLS",
        "AuthorizerId": Object {
          "Ref": "DocumentCognitoUserPoolsAuthorizer720A0112",
        },
        "HttpMethod": "POST",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "AttachDocumentFunc7255A71A",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Ref": "DocumentRestApidocumentManagementdocumentdocIdattachmentFDAEFEFD",
        },
        "RestApiId": Object {
          "Ref": "DocumentRestApi6062B97A",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DocumentRestApidocumentManagementdocumentdocIdattachmentPOSTApiPermissionDocBoxStackDocumentRestApi05CE81F3POSTdocumentManagementdocumentdocIdattachment9F48FA62": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "AttachDocumentFunc7255A71A",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DocumentRestApi6062B97A",
              },
              "/",
              Object {
                "Ref": "DocumentRestApiDeploymentStageapiB0406D50",
              },
              "/POST/documentManagement/document/*/attachment",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DocumentRestApidocumentManagementdocumentdocIdattachmentPOSTApiPermissionTestDocBoxStackDocumentRestApi05CE81F3POSTdocumentManagementdocumentdocIdattachment79963E57": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "AttachDocumentFunc7255A71A",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DocumentRestApi6062B97A",
              },
              "/test-invoke-stage/POST/documentManagement/document/*/attachment",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DocumentTable9FE6D880": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "AttributeDefinitions": Array [
          Object {
            "AttributeName": "id",
            "AttributeType": "S",
          },
        ],
        "BillingMode": "PAY_PER_REQUEST",
        "KeySchema": Array [
          Object {
            "AttributeName": "id",
            "KeyType": "HASH",
          },
        ],
        "SSESpecification": Object {
          "SSEEnabled": false,
        },
      },
      "Type": "AWS::DynamoDB::Table",
      "UpdateReplacePolicy": "Retain",
    },
    "DocumentUserPoolD7239797": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "AccountRecoverySetting": Object {
          "RecoveryMechanisms": Array [
            Object {
              "Name": "verified_phone_number",
              "Priority": 1,
            },
            Object {
              "Name": "verified_email",
              "Priority": 2,
            },
          ],
        },
        "AdminCreateUserConfig": Object {
          "AllowAdminCreateUserOnly": true,
        },
        "EmailVerificationMessage": "The verification code to your new account is {####}",
        "EmailVerificationSubject": "Verify your new account",
        "SmsVerificationMessage": "The verification code to your new account is {####}",
        "VerificationMessageTemplate": Object {
          "DefaultEmailOption": "CONFIRM_WITH_CODE",
          "EmailMessage": "The verification code to your new account is {####}",
          "EmailSubject": "Verify your new account",
          "SmsMessage": "The verification code to your new account is {####}",
        },
      },
      "Type": "AWS::Cognito::UserPool",
      "UpdateReplacePolicy": "Delete",
    },
    "DocumentUserPoolDocumentClientFC18D5CC": Object {
      "Properties": Object {
        "AllowedOAuthFlows": Array [
          "client_credentials",
        ],
        "AllowedOAuthFlowsUserPoolClient": true,
        "AllowedOAuthScopes": Array [
          "subscriber/docbox",
        ],
        "GenerateSecret": true,
        "SupportedIdentityProviders": Array [
          "COGNITO",
        ],
        "UserPoolId": Object {
          "Ref": "DocumentUserPoolD7239797",
        },
      },
      "Type": "AWS::Cognito::UserPoolClient",
    },
    "DocumentUserPoolDocumentDomainEDA07E73": Object {
      "Properties": Object {
        "Domain": "docbox",
        "UserPoolId": Object {
          "Ref": "DocumentUserPoolD7239797",
        },
      },
      "Type": "AWS::Cognito::UserPoolDomain",
    },
    "DocumentUserPoolDocumentResourceServer3852BE5A": Object {
      "Properties": Object {
        "Identifier": "subscriber",
        "Name": "subscriber",
        "Scopes": Array [
          Object {
            "ScopeDescription": "docbox-endpoint",
            "ScopeName": "docbox",
          },
          Object {
            "ScopeDescription": "attachbox-endpoint",
            "ScopeName": "attachbox",
          },
        ],
        "UserPoolId": Object {
          "Ref": "DocumentUserPoolD7239797",
        },
      },
      "Type": "AWS::Cognito::UserPoolResourceServer",
    },
    "DocumentUserPoolPersonalClient003B778B": Object {
      "Properties": Object {
        "AllowedOAuthFlows": Array [
          "client_credentials",
        ],
        "AllowedOAuthFlowsUserPoolClient": true,
        "AllowedOAuthScopes": Array [
          "subscriber/docbox",
          "subscriber/attachbox",
        ],
        "GenerateSecret": true,
        "SupportedIdentityProviders": Array [
          "COGNITO",
        ],
        "UserPoolId": Object {
          "Ref": "DocumentUserPoolD7239797",
        },
      },
      "Type": "AWS::Cognito::UserPoolClient",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A": Object {
      "DependsOn": Array [
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "e5032a7ed03a7762b99560439c17f58d046a35d40ebf64ba70c63157df388563.zip",
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:PutRetentionPolicy",
                "logs:DeleteRetentionPolicy",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "Roles": Array [
          Object {
            "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
